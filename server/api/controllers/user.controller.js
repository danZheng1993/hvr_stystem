const User = require('../models/user.model');
const ROLES = require('../constants/role');

var fs = require('fs');
var multer  = require('multer');

function create(req, res, next) {
  const user = new User({
    phoneNumber: req.body.phoneNumber,
    password: req.body.password,
    role: req.body.role
  });

  if (req.user.role === ROLES.ADMIN && req.body.role) {
    user.role = req.body.role;
  }

  user.save()
  .then((newUser) => {
    res.json(newUser);
  })
  .catch(next);
}

function update(req, res, next) {
  Object.assign(req.userModel, {
    userName: req.body.userName,
    phoneNumber: req.body.phoneNumber,
  });

  if (req.body.password) {
    req.userModel.password = req.body.password;
  }

  if (req.user.role === ROLES.ADMIN && req.body.role) {
    req.userModel.role = req.body.role;
  }

  req.userModel.save()
  .then((updatedUser) => {
    res.json(updatedUser);
  })
  .catch(next);
}

function updateOne(req, res, next) {
  console.log("here")
  console.log(req.body, req.file)
  var upload = multer({ dest: 'uploads/' }); //setting the default folder for multer
  upload.single('avatar')
  //other imports and code will go here
  if (req.file) {
    //below code will read the data from the upload folder. Multer     will automatically upload the file in that folder with an  autogenerated name
    fs.readFile(req.body.photoData.path,(err, contents)=> {
    if (err) {
    console.log('Error: ', err);
    }else{
    console.log('File contents ',contents);
    }
  })
  }


  Object.assign(req.userModel, {
    userName: req.body.userName,
    overview: req.body.overview
  });
  if (req.body.password) {
    req.userModel.password = req.body.password;
  }

  if (req.user.role === ROLES.ADMIN && req.body.role) {
    req.userModel.role = req.body.role;
  }

  req.userModel.save()
  .then((updatedUser) => {
    res.json(updatedUser);
  })
  .catch(next);
}

function read(req, res) {
  res.json(req.userModel);
}

function list(req, res, next) {
  let where = {};
  if (req.user.role === ROLES.MANAGER) {
    where = { role: { $ne: ROLES.ADMIN } };
  }

  User.find(where)
  .then((users) => {
    res.json(users);
  })
  .catch(next);
}

function remove(req, res, next) {
  req.userModel.remove(() => {
    res.json(req.userModel);
  })
  .catch(next);
}

function getUserByID(req, res, next, id) {
  User.findById(id)
  .then((user) => {
    if (!user) {
      res.status(404).json({ message: 'User not found' });
      return;
    }

    req.userModel = user;
    next();
  })
  .catch(next);
}

function getProfile(req, res, next) {
  User.findById(req.user._id)
  .then((user) => {
    if (!user) {
      res.status(404).json({ message: 'User not found' });
      return;
    }
    req.userModel = user;
    
    console.log(req.userModel)
    next();
  })
  .catch(next);
}

module.exports = {
  create,
  update,
  updateOne,
  read,
  list,
  remove,
  getUserByID,
  getProfile,
};
